name: Swift CI
on:
  pull_request:
  push: 
    paths: ["sdk/rust/**", "protobufs/**", "sdk/swift/**"]
    branches: ['main']

defaults:
  run:
    working-directory: sdk/swift

jobs:
  # note: this isn't for distribution (it's for CI builds and tests), and compilation time is being preferred over runtime.
  build-ffi:
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]

    defaults:
      run:
        working-directory: sdk/rust

    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            sdk/rust

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install rust-src
        run: rustup component add rust-src

      - name: Add target `${{ matrix.target }}`
        run: rustup target add ${{ matrix.target }}
      - name: Build for `${{ matrix.target }}`
        run: cargo build --features ffi -p hedera --target ${{ matrix.target }}

      - name: 'Upload `${{ matrix.target }}` Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: chedera-${{ matrix.target }}
          path: sdk/rust/target/${{ matrix.target }}/debug/libhedera.a
          retention-days: 1
      - name: 'Upload `${{ matrix.target }}` Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: chedera-${{ matrix.target }}
          path: sdk/c/include/hedera.h
          retention-days: 1

  format:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: Install swift-format
        run: brew install swift-format
      - name: Format
        run: swift format lint --strict --configuration .swift-format.json --recursive --parallel Sources/ Tests/ Examples/ Package.swift

  build:
    strategy:
      matrix:
        swift: ["5.6.1", "5.7"]
    needs: build-ffi
    runs-on: macos-11
    steps:
      - uses: swift-actions/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift }}

      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: sdk/swift/.build
          key: ${{ runner.os }}-spm-${{ github.job }}-${{ matrix.swift }}-${{ hashFiles('**/Package.resolved') }}

      - name: Download CHedera artifacts
        uses: actions/download-artifact@v3
        with:
          path: .tmp/

      - name: merge into macos-universal
        run: |
          mkdir -p sdk/swift/CHedera.xcframework/macos-universal/Headers
          cp sdk/swift/CHedera.xcframework/module.modulemap sdk/swift/CHedera.xcframework/macos-universal/headers
          cp .tmp/chedera-aarch64-apple-darwin/hedera.h sdk/swift/CHedera.xcframework/macos-universal/headers
          lipo .tmp/chedera-aarch64-apple-darwin/libhedera.a .tmp/chedera-x86_64-apple-darwin/libhedera.a -output sdk/swift/CHedera.xcframework/macos-universal/libhedera.a -create
        working-directory: .

      - name: Build
        run: swift build

  test:
    strategy:
      matrix:
        swift: ["5.6.1", "5.7"]
    needs: [build-ffi, build]
    runs-on: macos-11
    steps:
      - uses: swift-actions/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift }}
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: sdk/swift/.build
          key: ${{ runner.os }}-spm-${{ github.job }}-${{ matrix.swift }}-${{ hashFiles('**/Package.resolved') }}

      - name: Download CHedera `x86_64-apple-darwin`
        uses: actions/download-artifact@v3
        with:
          name: chedera-x86_64-apple-darwin
          path: .tmp/chedera/x86_64-apple-darwin

      - name: Download CHedera `aarch64-apple-darwin`
        uses: actions/download-artifact@v3
        with:
          name: chedera-aarch64-apple-darwin
          path: .tmp/chedera/aarch64-apple-darwin

      - name: merge into macos-universal
        run: |
          mkdir -p sdk/swift/CHedera.xcframework/macos-universal/Headers
          cp sdk/swift/CHedera.xcframework/module.modulemap sdk/swift/CHedera.xcframework/macos-universal/headers
          cp .tmp/chedera/aarch64-apple-darwin/hedera.h sdk/swift/CHedera.xcframework/macos-universal/headers
          lipo .tmp/chedera/aarch64-apple-darwin/libhedera.a .tmp/chedera/x86_64-apple-darwin/libhedera.a -output sdk/swift/CHedera.xcframework/macos-universal/libhedera.a -create
        working-directory: .

      - name: Test
        run: swift test
